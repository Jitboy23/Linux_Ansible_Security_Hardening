---
- name: Pre-check - Ensure connectivity and check /home usage
  hosts: all
  tasks:
    - block:
        - name: Ping the server
          ping:

        - name: Check /home usage
          command: df -h /home
          register: home_usage
          failed_when: home_usage.stdout_lines[1].split()[4] > '90%'

      rescue:
        - name: Fail if pre-checks are not met
          fail:
            msg: "Pre-checks failed. Halting playbook execution."

- name: Perform security hardening
  hosts: all
  tasks:
    - block:
        - name: Copy security hardening script to remote
          copy:
            src: /path/to/local/security_hardening.py  # Replace with the local path to your script
            dest: /path/to/remote/security_hardening.py  # Replace with the destination path on the remote server
            mode: '0755'

        - name: Run security hardening script
          script: /path/to/remote/security_hardening.py  # Ensure this path matches the destination path
          args:
            executable: python3
            creates: /path/to/lockfile  # Optional: to avoid re-running the script
          become: yes

- name: Post-check - Verify SSH service and server health
  hosts: all
  tasks:
    - block:
        - name: Run health check script
          script: /path/to/remote/health_check.py  # Replace with the correct path to your health check script
          register: health_check
          failed_when:
            - "'Disk Utilization > 90%' in health_check.stdout"
            - "'CPU Utilization > 90%' in health_check.stdout"
          changed_when: false

        - name: Print health check output
          debug:
            var: health_check.stdout_lines
          when: health_check.stdout != ""

        - name: Check SSH service status
          systemd:
            name: sshd
            state: started

      rescue:
        - name: Fail if post-checks are not met
          fail:
            msg: "Post-checks failed. Halting playbook execution."

- name: Handle high disk utilization
  hosts: all
  tasks:
    - block:
        - name: Print health check details before handling
          debug:
            var: health_check.stdout_lines

        - name: Clean up old log files
          shell: sudo rm -rf /var/log/old_logs/*
          when: "'Disk Utilization > 90%' in health_check.stdout"

        - name: Clean up package cache
          shell: sudo apt-get clean && sudo yum clean all
          when: "'Disk Utilization > 90%' in health_check.stdout"

        - name: Free up space in /home
          shell: sudo du -sh /home/* | sort -hr | head -n 10 | xargs sudo rm -rf
          when: "'Disk Utilization > 90%' in health_check.stdout"

        - name: Re-run health check script
          script: /path/to/remote/health_check.py  # Ensure this path matches the destination path
          register: health_check_retry
          failed_when:
            - "'Disk Utilization > 90%' in health_check_retry.stdout"
            - "'CPU Utilization > 90%' in health_check_retry.stdout"
          changed_when: false

        - name: Print health check retry output
          debug:
            var: health_check_retry.stdout_lines
          when: health_check_retry.stdout != ""

      rescue:
        - name: Fail if post-checks are not met
          fail:
            msg: "Post-checks failed. Halting playbook execution."
